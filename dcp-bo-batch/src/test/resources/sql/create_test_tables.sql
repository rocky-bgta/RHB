
----------------------------------------
-- SPRING BATCH TABLES
----------------------------------------
-- All required tables, views, sequences, etc are created in script:
-- classpath:org/springframework/batch/core/schema-hsqldb.sql

----------------------------------------
-- DCPBO TABLES / VIEWS
----------------------------------------

CREATE TABLE IF NOT EXISTS TBL_BATCH_JOB_EXECUTION (
	JOB_EXECUTION_ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	VERSION BIGINT NULL,
	JOB_INSTANCE_ID BIGINT NOT NULL,
	CREATE_TIME DATETIME NOT NULL,
	START_TIME DATETIME DEFAULT NULL,
	END_TIME DATETIME DEFAULT NULL,
	STATUS VARCHAR(10) NULL,
	EXIT_CODE VARCHAR(2500) NULL,
	EXIT_MESSAGE VARCHAR(2500) NULL,
	LAST_UPDATED DATETIME NULL,
	JOB_CONFIGURATION_LOCATION VARCHAR(2500) NULL
);

CREATE TABLE IF NOT EXISTS TBL_BATCH_STAGED_IBG_REJECT_TXN (
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	JOB_EXECUTION_ID INT NOT NULL,
	DATE VARCHAR(8) NOT NULL,
	TELLER VARCHAR(6) NOT NULL,
	TRACE VARCHAR(6) NOT NULL,
	REF1 VARCHAR(20) NOT NULL,
	NAME VARCHAR(16) NOT NULL,
	AMOUNT VARCHAR(11) NOT NULL,
	REJECT_CODE VARCHAR(4) NOT NULL,
	REJECT_DESCRIPTION VARCHAR(80) NULL,
	ACCOUNT_NO VARCHAR(20) NOT NULL,
	USER_ID INT NOT NULL,
	BENE_NAME VARCHAR(30) NOT NULL,
	BENE_ACCOUNT VARCHAR(30) NOT NULL,
	IS_PROCESSED BIT DEFAULT 0 NOT NULL,
	IS_NOTIFICATION_SENT BIT DEFAULT 0 NOT NULL,
	CREATED_TIME DATETIME NOT NULL,
	UPDATED_TIME DATETIME NOT NULL,
	FILE_NAME VARCHAR(255) NULL
);  

CREATE TABLE IF NOT EXISTS VW_BATCH_JOMPAY_FAILURE_VALIDATION (
	BILLER_CODE VARCHAR(10),
	PAYMENT_CHANNEL VARCHAR(5),
	REASON_FOR_FAILURE VARCHAR(30),
	REQUEST_TIME DATETIME
);

CREATE TABLE IF NOT EXISTS TBL_BATCH_STAGED_DAILY_DELTA_NEW_PROFILE(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	PROCESSING_DATE DATE NOT NULL,
	USER_ID INT NOT NULL,
	IS_PROCESSED BIT,
	CREATED_TIME DATETIME NOT NULL,
	UPDATED_TIME DATETIME NOT NULL,
	JOB_EXECUTION_ID BIGINT,
	CONSTRAINT UNIQUE_TBL_BATCH_STAGED_DAILY_DELTA_NEW_PROFILE_PROCESSING_DATE_USER_ID UNIQUE (PROCESSING_DATE, USER_ID)
);

CREATE TABLE IF NOT EXISTS TBL_BATCH_CONFIG (
    ID INT NOT NULL,
	PARAMETER_KEY VARCHAR(50) NOT NULL,
	PARAMETER_VALUE VARCHAR(1024) NOT NULL,
	CREATED_TIME DATETIME NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	UPDATED_TIME DATETIME NOT NULL,
	UPDATED_BY VARCHAR(50) NOT NULL,
);

CREATE TABLE IF NOT EXISTS TBL_BATCH_BILLER_PAYMENT_CONFIG (
	ID INT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	BILLER_CODE VARCHAR(5) NOT NULL UNIQUE,
	TEMPLATE_NAME VARCHAR(50) NOT NULL,
	IBK_FTP_FOLDER VARCHAR(500) NOT NULL,
	FTP_FOLDER VARCHAR(250) NOT NULL,
	FILE_NAME_FORMAT VARCHAR(50) NOT NULL,
	REPORT_UNIT_URI VARCHAR(100) NOT NULL,
	STATUS varchar(1) NOT NULL,
	IS_REQUIRED_TO_EXECUTE BIT NOT NULL,
	CREATED_TIME DATETIME NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	UPDATED_TIME DATETIME NOT NULL,
	UPDATED_BY VARCHAR(50) NOT NULL,
	TEMPLATE_ID	INT,
	BILLER_EMAIL VARCHAR(100),
	BILLER_EMAIL_PAYMENT_FILE_SUBJECT VARCHAR(100),
	BILLER_EMAIL_PAYMENT_FILE_BODY VARCHAR(500),
	BILLER_EMAIL_PAYMENT_FILE_OTP_SUBJECT VARCHAR(100),
	BILLER_EMAIL_PAYMENT_FILE_OTP_BODY VARCHAR(500),
	DELIVERY_MODE VARCHAR(10),
	IS_REQUIRED_TO_GENERATE_PAYMENT_FILE BIT,
	IS_REQUIRED_TO_GENERATE_REPORT_FILE	BIT,
	PROCESSED_BY VARCHAR(15)
);

CREATE TABLE IF NOT EXISTS TBL_BATCH_STAGED_IBK_PAYMENT_TXN (
	ID INT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	JOB_EXECUTION_ID INT NOT NULL,
	PROCESS_DATE VARCHAR(8) NOT NULL,
	BILLER_ACCOUNT_NO VARCHAR(14) NOT NULL,
	BILLER_ACCOUNT_NAME	VARCHAR(20) NOT NULL,
	BILLER_CODE	VARCHAR(5) NOT NULL,
	TXN_ID VARCHAR(6) NOT NULL,
	TXN_DATE VARCHAR(8) NOT NULL,
	TXN_AMOUNT VARCHAR(15) NOT NULL,
	TXN_TYPE VARCHAR(2) NOT NULL,
	TXN_DESCRIPTION	VARCHAR(20) NOT NULL,
	BILLER_REF_NO1 VARCHAR(25) NOT NULL,
	BILLER_REF_NO2 VARCHAR(25) NOT NULL,
	BILLER_REF_NO3 VARCHAR(32) NOT NULL,
	TXN_TIME VARCHAR(6) NOT NULL,
	FILE_NAME VARCHAR(255) NOT NULL,
	CREATED_TIME DATETIME NOT NULL,
	BILLER_REF_NO4 VARCHAR(50),
	ID_NO VARCHAR(20),
	POLICY_NO VARCHAR(30),
	USER_ADDRESS1 VARCHAR(100),
	USER_ADDRESS2 VARCHAR(100),
	USER_ADDRESS3 VARCHAR(100),
	USER_ADDRESS4 VARCHAR(100),
	USER_STATE VARCHAR(20),
	USER_CITY VARCHAR(20),
	USER_POSTCODE VARCHAR(20),
	USER_COUNTRY VARCHAR(20)
);

CREATE TABLE IF NOT EXISTS TBL_BATCH_SUSPENSE(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	JOB_EXECUTION_ID BIGINT NOT NULL,
	BATCH_JOB_NAME VARCHAR(100) NOT NULL,
	CREATED_TIME DATETIME NOT NULL,
	SUSPENSE_COLUMN VARCHAR(50) NOT NULL,
	SUSPENSE_TYPE VARCHAR(10) NOT NULL,
	SUSPENSE_MESSAGE VARCHAR(255) NOT NULL,
	SUSPENSE_RECORD VARCHAR(8000)
);

CREATE TABLE IF NOT EXISTS TBL_BATCH_JOB_INSTANCE(
	JOB_INSTANCE_ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	VERSION BIGINT NULL,
	JOB_NAME VARCHAR(100) NOT NULL,
	JOB_KEY VARCHAR(32) NOT NULL
);

CREATE TABLE IF NOT EXISTS vw_batch_jompay_ematching_success(
	id VARCHAR(16) NOT NULL,
	from_card_no VARCHAR(16) NOT NULL,
	from_account_no VARCHAR(30) NOT NULL,
	payment_method VARCHAR(30) NOT NULL,
	bank_code_ibg VARCHAR(50) NOT NULL,
	to_account_no VARCHAR(30) NOT NULL,
	amount DECIMAL(17,2) NOT NULL,
	to_biller_id VARCHAR(10) NOT NULL,
	txn_date VARCHAR(8) NOT NULL,
	txn_time VARCHAR(10) NOT NULL,
	updated_time DATETIME NOT NULL,
	main_function VARCHAR(50) NOT NULL,
	txn_status VARCHAR(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS vw_batch_jompay_ematching_card_prod(
	id INT NOT NULL,
	is_islamic BIT NULL,
	card_no VARCHAR(16) NOT NULL,
	product_code VARCHAR(8) NOT NULL
);

CREATE TABLE IF NOT EXISTS vw_batch_jompay_ematching_deposit_prod(
	id INT NOT NULL,
	is_islamic BIT NULL,
	account_no VARCHAR(30) NOT NULL,
	product_code VARCHAR(4) NOT NULL
);

CREATE TABLE IF NOT EXISTS vw_batch_jompay_ematching_tbl_bnm_ctrl3(
	ID INT NOT NULL,
	BNM VARCHAR(5) NOT NULL,
	CTRL3 VARCHAR(3) NOT NULL,
	CREATED_TIME DATETIME NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	UPDATED_TIME DATETIME NOT NULL,
	UPDATED_BY VARCHAR(50) NOT NULL,
);

CREATE TABLE IF NOT EXISTS vw_batch_biller_payment_txn (
	biller_code VARCHAR(10),
	biller_account_no VARCHAR(16),
	biller_account_name VARCHAR(80),
	txn_id VARCHAR(36),
	txn_date VARCHAR(30),
	txn_amount DECIMAL(17,2),
	txn_type VARCHAR(2),
	txn_description VARCHAR(20),
	biller_ref_no1  VARCHAR(50),
	biller_ref_no2 VARCHAR(50),
	biller_ref_no3 VARCHAR(80),
	txn_time VARCHAR(8000)
);


CREATE TABLE IF NOT EXISTS vw_batch_tbl_biller(
	biller_collection_account_no VARCHAR(20),
	biller_code VARCHAR(10),
	biller_name VARCHAR(50),
	status VARCHAR(8),
	updated_time DATETIME,
	category_id	INT,
	icon_url VARCHAR(250),
	min_amount DECIMAL(19,7),
	max_amount DECIMAL(19,7),
	ref_validation VARCHAR(4000),
	config_checksum VARCHAR(100),
	is_casa_allowed BIT,
	is_card_allowed	BIT,
	isis_biller	BIT,
	merchant_id VARCHAR(16)
);

CREATE TABLE IF NOT EXISTS TBL_BATCH_IBG_REJECT_CODE(
	ID INT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	REJECT_CODE VARCHAR(4) NOT NULL,
	REJECT_DESCRIPTION VARCHAR(80) NOT NULL,
	CREATED_TIME DATETIME,
	CREATED_BY VARCHAR(50),
	UPDATED_TIME DATETIME,
	UPDATED_BY VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS TBL_BATCH_STAGED_MERGE_CIS (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	job_execution_id int NOT NULL,
	cis_no VARCHAR(14) NOT NULL,
	new_cis_no VARCHAR(14) NOT NULL,
	processing_date VARCHAR(8) NOT NULL,
	is_processed BIT NOT NULL,
	created_time DATETIME NOT NULL,
	updated_time DATETIME NOT NULL,
	file_name VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS TBL_USER_PROFILE(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	CIS_NO VARCHAR(14) NULL,
	USER_STATUS VARCHAR(1) NOT NULL
);

CREATE TABLE IF NOT EXISTS TBL_BATCH_LOOKUP(
	id BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	TBL_BATCH_LOOKUP.group varchar(100) NOT NULL,
	TBL_BATCH_LOOKUP.value varchar(255) NOT NULL,
	descriptions varchar(255) NULL,
	remarks varchar(255) NULL,
	created_time datetime NOT NULL,
	created_by varchar(50) NOT NULL,
	updated_time datetime NOT NULL,
	updated_by varchar(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS VW_BATCH_UPDATE_CUST_PROFILE_VALIDATION(
    job_execution_id VARCHAR(100),
    new_cis_no VARCHAR(100),
    new_race VARCHAR(100),
    new_birth_date VARCHAR(100),
    new_gender VARCHAR(100),
    new_is_staff VARCHAR(100),
    new_customer_type VARCHAR(100),
    old_birth_date VARCHAR(100),
    old_is_staff VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS VW_BATCH_TOPUP_TXN(
    txn_time TIMESTAMP,
    ref_no VARCHAR(100),
    host_ref_no VARCHAR(100),
    mobile_no VARCHAR(100),
    prepaid_product_code VARCHAR(100),
    amount DOUBLE,
    payment_method VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS VW_BATCH_EXTRACT_CUSTOMER_PROFILE(
    CIS_NO VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS TBL_BATCH_STAGED_GST_UPDATE(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) NOT NULL PRIMARY KEY,
	JOB_EXECUTION_ID INT NULL,
	IS_PROCESSED BIT NULL,
	FILE_NAME varchar(255) NULL,
	HD_DATE varchar(8) NULL,
	HD_TIME varchar(8) NULL,
	RECORD_INDICATOR varchar(2) NULL,
	ENTITY_CODE varchar(5) NULL,
	ENTITY_INDICATOR varchar(3) NULL,
	UNIQUE_ID varchar(10) NULL,
	SOURCE_SYSTEM_ID varchar(10) NULL,
	TRANSACTION_IDENTIFIER varchar(20) NULL,
	TRANSACTION_DESCRIPTION varchar(50) NULL,
	GST_RATE varchar(7) NULL,
	TREATMENT_TYPE varchar(2) NULL,
	TAX_CODE varchar(10) NULL,
	CALCULATION_METHOD varchar(1) NULL,
	GL_ACCOUNT_CODE_CHARGES varchar(12) NULL,
	START_DATE varchar(8) NULL,
	END_DATE varchar(8) NULL,
	LAST_UPDATE_DATE varchar(8) NULL,
	LAST_UPDATE_TIME varchar(6) NULL,
	LAST_UPDATE_BY varchar(10) NULL,
	HOST_TRAN_OR_GST_GL_CODE varchar(6) NULL,
	FILLER varchar(3) NULL,
);

CREATE TABLE IF NOT EXISTS VW_BATCH_GST_CENTRALIZED_FILE_UPDATE(
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
    TXN_TYPE VARCHAR(255),
    MAIN_FUNCTION VARCHAR(255),
    SUB_FUNCTION VARCHAR(255),
    PAYMENT_METHOD VARCHAR(255),
    ENTITY_CODE VARCHAR(255),
    ENTITY_INDICATOR VARCHAR(255),
    UNIQUE_ID VARCHAR(255),
    SOURCE_SYSTEM VARCHAR(255),
    TXN_IDENTIFIER VARCHAR(255),
    TXN_DESCRIPTION VARCHAR(255),
    GST_RATE VARCHAR(255),
    TREATMENT_TYPE VARCHAR(255),
    TAX_CODE VARCHAR(255),
    CALCULATION_METHOD VARCHAR(255),
    GL_ACCOUNT_CODE VARCHAR(255),
    BEGIN_DATE VARCHAR(255),
    END_DATE VARCHAR(255),
    CREATED_DATE VARCHAR(255),
    CREATED_BY VARCHAR(255),
    UPDATED_TIME VARCHAR(255),
    UPDATED_BY VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS VW_BATCH_GST_CONFIG_CHECK_NEW_RECORD(
    old_gst_max_unique_id VARCHAR(255),
    old_gst_txn_identifier VARCHAR(255),
    old_gst_source_system VARCHAR(255),
    new_gst_max_unique_id VARCHAR(255),
    job_execution_id INT
)

CREATE TABLE IF NOT EXISTS vw_batch_gst_data_extraction (
    TXN_TYPE VARCHAR(255),
    MAIN_FUNCTION VARCHAR(255),
    SUB_FUNCTION VARCHAR(255),
    ENTITY_CODE VARCHAR(255),
    ENTITY_INDICATOR VARCHAR(255),
    UNIQUE_ID VARCHAR(255),
    SOURCE_SYSTEM VARCHAR(255),
    TXN_IDENTIFIER VARCHAR(255),
    TXN_DESCRIPTION VARCHAR(255),
    GST_RATE VARCHAR(255),
    TREATMENT_TYPE VARCHAR(255),
    TAX_CODE VARCHAR(255),
    CALCULATION_METHOD VARCHAR(255),
    GL_ACCOUNT_CODE VARCHAR(255),
    BEGIN_DATE VARCHAR(255),
    END_DATE VARCHAR(255),
    PAYMENT_METHOD VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS VW_BATCH_BRANCH_CODE_UPDATE_VALIDATION (
    job_execution_id INT,
    bnm_branch_code VARCHAR(100),
    rhb_branch_code VARCHAR(100),
    rhb_branch_name VARCHAR(100),
    rhb_branch_add1 VARCHAR(100),
    rhb_branch_add2 VARCHAR(100),
    rhb_branch_add3 VARCHAR(100),
    bnm VARCHAR(100),
    ctrl3 VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS TBL_BATCH_STAGED_IBK_JOMPAY_EMATCHING_REPORT (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	job_execution_id BIGINT NOT NULL,
	channel_id	VARCHAR(3) NOT NULL,
	channel_status	VARCHAR(2) NOT NULL,
	application_id	VARCHAR(3) NOT NULL,
	acct_ctrl1	VARCHAR(2) NOT NULL,
	acct_ctrl2	VARCHAR(3) NOT NULL,
	acct_ctrl3	VARCHAR(3) NOT NULL,
	account_no	VARCHAR(22) NOT NULL,
	debit_credit_ind VARCHAR(1) NOT NULL,
	user_tran_code	VARCHAR(4) NOT NULL,
	amount	numeric(18, 2) NOT NULL,
	txn_branch	VARCHAR(5) NOT NULL,
	txn_date	VARCHAR(8) NOT NULL,
	txn_time	VARCHAR(6) NOT NULL,
	file_name	VARCHAR(255) NOT NULL,
	created_time	DATETIME NOT NULL
);

CREATE TABLE IF NOT EXISTS vw_batch_merged_topup_txn(
    txn_time VARCHAR(25),
    ref_no VARCHAR(20),
    host_ref_no VARCHAR(100),
    mobile_no VARCHAR(100),
    prepaid_product_code VARCHAR(3),
    amount VARCHAR(10),
    payment_method VARCHAR(20),
    payment_type VARCHAR(30)
);

CREATE TABLE IF NOT EXISTS TBL_BATCH_STAGED_IBK_PREPAID_RELOAD_EXTRACTION (
    job_execution_id INT,
    file_name VARCHAR(255),
    payment_type VARCHAR(8),
    txn_time VARCHAR(25),
    ref_no VARCHAR(20),
    host_ref_no VARCHAR(100),
    mobile_no VARCHAR(100),
    prepaid_product_code VARCHAR(3),
    amount VARCHAR(10),
    txn_status VARCHAR(20),
    created_time DATETIME
);

CREATE TABLE IF NOT EXISTS TBL_BATCH_PREMIER_RM_TAG_FULL (
	CIF_NO VARCHAR (14) NULL,
	RELATIONSHIP_MANAGER_CODE VARCHAR (5) NULL,
	FULL_NAME VARCHAR (80) NULL,
	ID_NO VARCHAR (20) NULL,
	STAFF_INDICATOR VARCHAR (2) NULL,
);

CREATE TABLE IF NOT EXISTS vw_batch_premier_check_new_or_update_value (
    JOB_EXECUTION_ID VARCHAR(255),
    CIF_NO VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS vw_batch_premier_check_new_or_update_value (
    JOB_EXECUTION_ID VARCHAR(255),
    CIF_NO VARCHAR(255),
    NEW_RM_CODE VARCHAR(255),
    OLD_RM_CODE VARCHAR(255),
    OLD_IS_PREMIER VARCHAR(255),
    ID VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS vw_batch_merged_jompay_ematching (
    channel_id VARCHAR(20),
    channel_status VARCHAR(2),
    application_id VARCHAR(3),
    acct_ctrl1 VARCHAR(2),
    acct_ctrl2 VARCHAR(3),
	acct_ctrl3 VARCHAR(3),
	account_no VARCHAR(30),
    debit_credit_ind VARCHAR(1),
    user_tran_code VARCHAR(4),
    amount Double,
	txn_branch integer,
	txn_date VARCHAR(8),
	txn_time VARCHAR(8)
);

CREATE TABLE IF NOT EXISTS TBL_BATCH_STAGED_JOMPAY_FAILURE_TXN (
	ID INT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	BILLER_CODE VARCHAR(10) NOT NULL,
	PAYMENT_CHANNEL VARCHAR(5) NOT NULL,
	REQUEST_TIME DATETIME NOT NULL,
	REASON_FOR_FAILURE VARCHAR(30) NOT NULL,
	FILE_NAME VARCHAR(255) NOT NULL,
	CREATED_TIME DATETIME
);

CREATE TABLE IF NOT EXISTS TBL_BATCH_UT_JOB_STATUS_CONTROL(
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
  JOB_EXECUTION_ID BIGINT NOT NULL,
  BATCH_PROCESS_DATE DATETIME NOT NULL,
  BATCH_END_DATETIME DATETIME NOT NULL,
  TARGET_DATASET INT NOT NULL,
  STATUS INT DEFAULT 0 NOT NULL ,
  TBL_UT_CUSTOMER_STATUS INT,
  TBL_UT_CUSTOMER_REL_STATUS INT,
  TBL_UT_ACCOUNT_STATUS INT,
  TBL_UT_ACCOUNT_HOLDING_STATUS INT,
  TBL_UT_FUND_MASTER_STATUS INT,
  CREATED_BY VARCHAR(255) NOT NULL,
  CREATED_TIME DATETIME NOT NULL,
  UPDATED_BY VARCHAR(255) NOT NULL,
  UPDATED_TIME DATETIME NOT NULL
);


CREATE TABLE IF NOT EXISTS TBL_UT_CUSTOMER_1(
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
  JOB_EXECUTION_ID BIGINT NOT NULL,
  process_date VARCHAR(8) NOT NULL,
  batch_extraction_time DATETIME NOT NULL,
  cis_no VARCHAR(14) NOT NULL,
  name VARCHAR(100) NOT NULL,
  file_name VARCHAR(255) NOT NULL,  
  STATUS INT DEFAULT 0  NOT NULL ,
  CREATED_BY VARCHAR(255) NOT NULL,
  CREATED_TIME DATETIME NOT NULL,
  UPDATED_BY VARCHAR(255) NOT NULL,
  UPDATED_TIME DATETIME NOT NULL
);

CREATE TABLE IF NOT EXISTS TBL_UT_CUSTOMER_2(
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
  JOB_EXECUTION_ID BIGINT NOT NULL,
  process_date VARCHAR(8) NOT NULL,
  batch_extraction_time DATETIME NOT NULL,
  cis_no VARCHAR(14) NOT NULL,
  name VARCHAR(100) NOT NULL,
  file_name VARCHAR(255) NOT NULL,
  STATUS INT DEFAULT 0 NOT NULL ,
  CREATED_BY VARCHAR(255) NOT NULL,
  CREATED_TIME DATETIME NOT NULL,
  UPDATED_BY VARCHAR(255) NOT NULL,
  UPDATED_TIME DATETIME NOT NULL
);


CREATE TABLE IF NOT EXISTS TBL_UT_CUSTOMER_REL_1(
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
  JOB_EXECUTION_ID BIGINT NOT NULL,
  process_date VARCHAR(8) NOT NULL,
  batch_extraction_time DATETIME NOT NULL,
  cis_no VARCHAR(14) NOT NULL,
  account_no VARCHAR(16) NOT NULL,
  join_type VARCHAR(1) NOT NULL,
  file_name VARCHAR(255) NOT NULL,
  STATUS INT DEFAULT 0  NOT NULL,
  CREATED_BY VARCHAR(255) NOT NULL,
  CREATED_TIME DATETIME NOT NULL,
  UPDATED_BY VARCHAR(255) NOT NULL,
  UPDATED_TIME DATETIME NOT NULL
);

CREATE TABLE IF NOT EXISTS TBL_UT_CUSTOMER_REL_2(
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
  JOB_EXECUTION_ID BIGINT NOT NULL,
  process_date VARCHAR(8) NOT NULL,
  batch_extraction_time DATETIME NOT NULL,
  cis_no VARCHAR(14) NOT NULL,
  account_no VARCHAR(16) NOT NULL,
  join_type VARCHAR(1) NOT NULL,
  file_name VARCHAR(255) NOT NULL,
  STATUS INT DEFAULT 0 NOT NULL ,
  CREATED_BY VARCHAR(255) NOT NULL,
  CREATED_TIME DATETIME NOT NULL,
  UPDATED_BY VARCHAR(255) NOT NULL,
  UPDATED_TIME DATETIME NOT NULL
);

CREATE TABLE IF NOT EXISTS TBL_UT_ACCOUNT_1(
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
  JOB_EXECUTION_ID BIGINT NOT NULL,
  process_date VARCHAR(8) NOT NULL,
  batch_extraction_time DATETIME NOT NULL,
  account_no VARCHAR(16) NOT NULL,
  signatory_code VARCHAR(10) NOT NULL,
  signatory_description VARCHAR(255) NOT NULL,
  account_type VARCHAR(10) NOT NULL,
  account_status_code VARCHAR(10) NOT NULL,
  account_status_description VARCHAR(255) NOT NULL,
  investment_product VARCHAR(2) NOT NULL,
  last_performed_txn_date DATETIME NOT NULL,
  file_name VARCHAR(255) NOT NULL, 
  STATUS INT DEFAULT 0 NOT NULL,
  CREATED_BY VARCHAR(255) NOT NULL,
  CREATED_TIME DATETIME NOT NULL,
  UPDATED_BY VARCHAR(255) NOT NULL,
  UPDATED_TIME DATETIME NOT NULL
);

CREATE TABLE IF NOT EXISTS TBL_UT_ACCOUNT_2(
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
  JOB_EXECUTION_ID BIGINT NOT NULL,
  process_date VARCHAR(8) NOT NULL,
  batch_extraction_time DATETIME NOT NULL,
  account_no VARCHAR(16) NOT NULL,
  signatory_code VARCHAR(10)  NULL,
  signatory_description VARCHAR(255)  NULL,
  account_type VARCHAR(10) NOT NULL,
  account_status_code VARCHAR(10) NOT NULL,
  account_status_description VARCHAR(255) NOT NULL,
  investment_product VARCHAR(2) NOT NULL,
  last_performed_txn_date DATETIME  NULL,
  file_name VARCHAR(255) NOT NULL, 
  STATUS INT DEFAULT 0 NOT NULL,
  CREATED_BY VARCHAR(255) NOT NULL,
  CREATED_TIME DATETIME NOT NULL,
  UPDATED_BY VARCHAR(255) NOT NULL,
  UPDATED_TIME DATETIME NOT NULL
);


CREATE TABLE IF NOT EXISTS TBL_UT_ACCOUNT_HOLDING_1(
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
  JOB_EXECUTION_ID BIGINT NOT NULL,
  process_date VARCHAR(8) NOT NULL,
  batch_extraction_time DATETIME NOT NULL,
  account_no VARCHAR(16) NOT NULL,
  fund_id VARCHAR(10) NOT NULL,
  holding_unit DECIMAL(24,6) NOT NULL,
  fund_currency_market_value DECIMAL(24,2) NOT NULL,
  fund_currency_unrealised_gain_loss DECIMAL(24,2) NOT NULL,
  fund_currency_unrealised_gain_loss_percentage DECIMAL(24,2) NOT NULL,
  fund_currency_investment_amount DECIMAL(20,2) NOT NULL,
  fund_currency_average_unit_price DECIMAL(20,12) NOT NULL,
  fund_myr_market_value DECIMAL(24,2) NOT NULL,
  fund_myr_unrealised_gain_loss DECIMAL(24,2) NOT NULL,
  fund_myr_unrealised_gain_loss_percentage DECIMAL(24,2) NOT NULL,
  fund_myr_investment_amount DECIMAL(24,2) NOT NULL,
  fund_myr_average_unit_price DECIMAL(20,12) NOT NULL,
  file_name VARCHAR(255) NOT NULL, 
  STATUS INT DEFAULT 0 NOT NULL,
  CREATED_BY VARCHAR(255) NOT NULL,
  CREATED_TIME DATETIME NOT NULL,
  UPDATED_BY VARCHAR(255) NOT NULL,
  UPDATED_TIME DATETIME NOT NULL
);

CREATE TABLE IF NOT EXISTS TBL_UT_ACCOUNT_HOLDING_2(
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
  JOB_EXECUTION_ID BIGINT NOT NULL,
  process_date VARCHAR(8) NOT NULL,
  batch_extraction_time DATETIME NOT NULL,
  account_no VARCHAR(16) NOT NULL,
  fund_id VARCHAR(10) NOT NULL,
  holding_unit DECIMAL(24,6) NOT NULL,
  fund_currency_market_value DECIMAL(24,2) NOT NULL,
  fund_currency_unrealised_gain_loss DECIMAL(24,2) NOT NULL,
  fund_currency_unrealised_gain_loss_percentage DECIMAL(24,2) NOT NULL,
  fund_currency_investment_amount DECIMAL(20,2) NOT NULL,
  fund_currency_average_unit_price DECIMAL(20,12) NOT NULL,
  fund_myr_market_value DECIMAL(24,2) NOT NULL,
  fund_myr_unrealised_gain_loss DECIMAL(24,2) NOT NULL,
  fund_myr_unrealised_gain_loss_percentage DECIMAL(24,2) NOT NULL,
  fund_myr_investment_amount DECIMAL(24,2) NOT NULL,
  fund_myr_average_unit_price DECIMAL(20,12) NOT NULL,
  file_name VARCHAR(255) NOT NULL, 
  STATUS INT DEFAULT 0 NOT NULL,
  CREATED_BY VARCHAR(255) NOT NULL,
  CREATED_TIME DATETIME NOT NULL,
  UPDATED_BY VARCHAR(255) NOT NULL,
  UPDATED_TIME DATETIME NOT NULL
);

CREATE TABLE IF NOT EXISTS TBL_UT_FUND_MASTER_1(
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
  JOB_EXECUTION_ID BIGINT NOT NULL,
  process_date VARCHAR(8) NOT NULL,
  batch_extraction_time DATETIME NOT NULL,
  fund_id VARCHAR(10) NOT NULL,
  fund_name VARCHAR(255) NOT NULL,  
  fund_currency VARCHAR(3) NOT NULL,
  fund_currency_nav_price DECIMAL(24,2) NOT NULL,
  nav_date DATETIME NOT NULL,
  product_category_code VARCHAR(10) NOT NULL, 
  product_category_description VARCHAR(255) NOT NULL, 
  risk_level_code VARCHAR(10) NOT NULL,
  risk_level_description VARCHAR(255) NOT NULL,
  myr_nav_price DECIMAL(16,6) NOT NULL,
  file_name VARCHAR(255) NOT NULL, 
  STATUS INT DEFAULT 0 NOT NULL,
  CREATED_BY VARCHAR(255) NOT NULL,
  CREATED_TIME DATETIME NOT NULL,
  UPDATED_BY VARCHAR(255) NOT NULL,
  UPDATED_TIME DATETIME NOT NULL
);

CREATE TABLE IF NOT EXISTS TBL_UT_FUND_MASTER_2(
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
  JOB_EXECUTION_ID BIGINT NOT NULL,
  process_date VARCHAR(8) NOT NULL,
  batch_extraction_time DATETIME NOT NULL,
  fund_id VARCHAR(10) NOT NULL,
  fund_name VARCHAR(255) NOT NULL,  
  fund_currency VARCHAR(3) NOT NULL,
  fund_currency_nav_price DECIMAL(24,2) NOT NULL,
  nav_date DATETIME NOT NULL,
  product_category_code VARCHAR(10) NOT NULL, 
  product_category_description VARCHAR(255) NOT NULL, 
  risk_level_code VARCHAR(10) NOT NULL,
  risk_level_description VARCHAR(255) NOT NULL,
  myr_nav_price DECIMAL(16,6) NOT NULL,
  file_name VARCHAR(255) NOT NULL, 
  STATUS INT DEFAULT 0 NOT NULL,
  CREATED_BY VARCHAR(255) NOT NULL,
  CREATED_TIME DATETIME NOT NULL,
  UPDATED_BY VARCHAR(255) NOT NULL,
  UPDATED_TIME DATETIME NOT NULL
);

CREATE TABLE IF NOT EXISTS TBL_ACCOUNT_BATCH_INFO(
  ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
  ACCOUNT_TYPE VARCHAR(30) NOT NULL, 
  START_TIME DATETIME  NULL, 
  END_TIME DATETIME  NULL, 
  TARGET_DATASET VARCHAR(30) NULL, 
  UPDATED_BY VARCHAR(50) NOT NULL,
  UPDATED_TIME DATETIME NOT NULL
);

  CREATE TABLE IF NOT EXISTS TBL_BATCH_STAGED_NOTIFICATION_RAW(
	id BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	job_execution_id BIGINT NOT NULL,
	file_name VARCHAR(255) NOT NULL,
	process_date VARCHAR(8) NOT NULL,
	event_code VARCHAR(5) NOT NULL,
	key_type VARCHAR(3) NOT NULL,
	data_1 VARCHAR(50) NULL,
	data_2 VARCHAR(50) NULL,
	data_3 VARCHAR(50) NULL,
	data_4 VARCHAR(50) NULL,
	data_5 VARCHAR(50) NULL,
	data_6 VARCHAR(50) NULL,
	data_7 VARCHAR(50) NULL,
	data_8 VARCHAR(50) NULL,
	data_9 VARCHAR(50) NULL,
	data_10 VARCHAR(50) NULL,
	is_processed bit NOT NULL,
	created_time DATETIME NOT NULL,
	created_by VARCHAR(50) NOT NULL,
	updated_time DATETIME NOT NULL,
	updated_by VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS TBL_BO_USER(
	ID INT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	USERNAME VARCHAR(50) NOT NULL,
	EMAIL VARCHAR(80) NOT NULL,
	NAME VARCHAR(80) NOT NULL,
	USER_DEPARTMENT_ID INT NOT NULL,
	USER_STATUS_ID VARCHAR(1) NOT NULL,
	LAST_LOGIN_TIME DATETIME NULL,
	FAILED_LOGIN_COUNT INT NOT NULL,
	CREATED_TIME DATETIME NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	UPDATED_TIME DATETIME NOT NULL,
	UPDATED_BY VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS TBL_BO_CONFIG_GENERIC(
	ID INT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	CONFIG_TYPE VARCHAR(50) NOT NULL,
	CONFIG_CODE VARCHAR(50) NOT NULL,
	CONFIG_DESC VARCHAR(80) NOT NULL,
	CREATED_TIME DATETIME NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	UPDATED_TIME DATETIME NOT NULL,
	UPDATED_BY VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS TBL_BATCH_USER_MAINT_AUTO_AGING (
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	JOB_EXECUTION_ID BIGINT NOT NULL,
	USER_ID INT NOT NULL,
	NAME VARCHAR(80) NOT NULL,
	EMAIL VARCHAR(80) NOT NULL,
	DEPARTMENT VARCHAR(80) NOT NULL,
	CURRENT_USER_STATUS_ID VARCHAR(1) NOT NULL,
	NEW_USER_STATUS_ID VARCHAR(1),
	LAST_LOGIN_TIME DATETIME,
	IS_PROCESSED BIT DEFAULT 0 NOT NULL,
	CREATED_TIME DATETIME NOT NULL,
	UPDATED_TIME DATETIME NOT NULL
);

CREATE TABLE IF NOT EXISTS TBL_BATCH_STAGED_NOTIFICATION (
	ID INT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	JOB_EXECUTION_ID BIGINT NOT NULL,
	FILE_NAME VARCHAR(255) NOT NULL,
	PROCESS_DATE VARCHAR(8) NOT NULL,
	EVENT_CODE VARCHAR(5) NOT NULL,
	KEY_TYPE VARCHAR(3) NOT NULL,
	USER_ID BIGINT NOT NULL,
	DATA_1 VARCHAR(50),
	DATA_2 VARCHAR(50),
	DATA_3 VARCHAR(50),
	DATA_4 VARCHAR(50),
	DATA_5 VARCHAR(50),
	DATA_6 VARCHAR(50),
	DATA_7 VARCHAR(50),
	DATA_8 VARCHAR(50),
	DATA_9 VARCHAR(50),
	DATA_10 VARCHAR(50),
	IS_PROCESSED BIT DEFAULT 0 NOT NULL ,
	CREATED_TIME DATETIME NOT NULL,
	CREATED_BY VARCHAR(50) NOT NULL,
	UPDATED_TIME DATETIME NOT NULL,
	UPDATED_BY VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS vw_batch_cardlink_notification (
	FILE_NAME VARCHAR(255) NOT NULL,
	PROCESS_DATE VARCHAR(8) NOT NULL,
	EVENT_CODE VARCHAR(5) NOT NULL,
	KEY_TYPE VARCHAR(3) NOT NULL,
	SYSTEM_DATE VARCHAR(50),
	SYSTEM_TIME VARCHAR(50),
	CARD_NUMBER VARCHAR(50),
	PAYMENT_DUE_DATE VARCHAR(50),
	CARD_TYPE VARCHAR(50),
	MINIMUM_AMOUNT VARCHAR(50),
	OUTSTANDING_AMOUNT VARCHAR(50),
	STATEMENT_AMOUNT VARCHAR(50),
	STATEMENT_DATE VARCHAR(50),
	NOTIFICATION_RAW_ID INT NOT NULL,
	USER_ID INT NOT NULL
);

CREATE TABLE IF NOT EXISTS VW_SNAPSHOT_BO_USER_PROFILE_ACCESS (
    dept_name VARCHAR(80),
    user_id VARCHAR(50),
    user_name VARCHAR(80),
    user_group VARCHAR(80),
    role VARCHAR(8),
    status VARCHAR(8),
    user_created_date VARCHAR(10),
    user_created_time VARCHAR(8),
    last_login_date VARCHAR(10),
    last_login_time VARCHAR(8),
    user_updated_time datetime,
    user_updated_by VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS vw_snapshot_bo_user_group (
    user_group VARCHAR(80),
    role VARCHAR(8),
    function_name VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS TBL_SNAPSHOT_BO_USER(
	id int NULL,
	job_execution_id int NOT NULL,
	dept_name varchar(80) NULL,
	user_id varchar(50) NULL,
	user_name varchar(80) NULL,
	user_group varchar(80) NULL,
	role varchar(8) NULL,
	status varchar(8) NULL,
	user_created_date varchar(10) NULL,
	user_created_time varchar(8) NULL,
	user_updated_time varchar(50) NULL,
	user_updated_by varchar(50) NULL,
	last_login_date varchar(10) NULL,
	last_login_time varchar(8) NULL,
	updated_time varchar(50) NULL,
	updated_by varchar(50) NULL,
	created_time varchar(50) NOT NULL,
	created_by varchar(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS TBL_SNAPSHOT_BO_USER_GROUP(
	id int NULL,
	job_execution_id int NOT NULL,
	user_group varchar(80) NULL,
	role varchar(8) NULL,
	function_name varchar(50) NULL,
	created_time varchar(50) NOT NULL,
	created_by varchar(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS VW_BATCH_CURRENCY_RATE_CONFIG (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	code varchar(3) NOT NULL,
	description varchar(30) NOT NULL,
	buy_tt decimal(10, 7) NOT NULL,
	unit int NOT NULL,
	created_time datetime NOT NULL,
	created_by varchar(50) NOT NULL,
	updated_time datetime NOT NULL,
	updated_by varchar(50) NOT NULL,
	sell_tt decimal(10, 7) NOT NULL
);

CREATE TABLE IF NOT EXISTS TBL_BATCH_STAGED_UPDATE_EXCHANGE_RATE(
	id BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	job_execution_id bigint ,
	currency_rate_config_id int ,
	code varchar(3) ,
	description varchar(30) ,
	buy_tt decimal(10,7) ,
	unit int ,
	is_processed bit DEFAULT 0  ,
	created_time datetime ,
	updated_time datetime,
	sell_tt decimal(10, 7)
);

CREATE TABLE IF NOT EXISTS TBL_CURRENCY_RATE_CONFIG (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	code varchar(3) NOT NULL,
	description varchar(30) NOT NULL,
	buy_tt decimal(10, 7) NOT NULL,
	unit int NOT NULL,
	created_time datetime NOT NULL,
	created_by varchar(50) NOT NULL,
	updated_time datetime NOT NULL,
	updated_by varchar(50) NOT NULL,
	sell_tt decimal(10, 7) NOT NULL
);

CREATE TABLE IF NOT EXISTS TBL_BATCH_STAGED_NOTIF_MASS (
	ID BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,
	JOB_EXECUTION_ID BIGINT,
	FILE_NAME VARCHAR(255),
	EVENT_CODE VARCHAR(5),
	CONTENT VARCHAR(4000),
	USER_ID BIGINT,
	IS_PROCESSED BIT DEFAULT 0,
	CREATED_TIME DATETIME,
	CREATED_BY VARCHAR(50),
	UPDATED_TIME DATETIME,
	UPDATED_BY VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS TBL_BILLER_CATEGORY (
	ID INT,
	CATEGORY_NAME VARCHAR(50),
	STATUS VARCHAR(8),
	CREATED_TIME DATETIME,
	CREATED_BY VARCHAR(50),
	UPDATED_TIME DATETIME,
	UPDATED_BY VARCHAR(50),
	SORT_ORDER INT
);

CREATE TABLE IF NOT EXISTS TBL_BATCH_BILLER_PAYMENT_FILE (
	ID INT,
	BILLER_PAYMENT_CONFIG_ID INT,
	BILLER_CODE VARCHAR(5),
	BILLER_NAME VARCHAR(50),
	BILLER_CATEGORY VARCHAR(50),
	FILE_GENERATED_PATH VARCHAR(50),
	IS_FILE_GENERATED BIT,
	IS_FILE_DELIVERED BIT,
	FILE_DELIVERED_DATE DATE,
	IS_ERROR BIT,
	ERROR_MESSAGE VARCHAR(100),
	FILE_DATE DATE,
	CREATED_TIME DATETIME,
	CREATED_BY VARCHAR(50),
	UPDATED_TIME DATETIME,
	UPDATED_BY VARCHAR(50)
);